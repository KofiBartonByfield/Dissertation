# Set reference category
dat.1$GDPWdiff <- relevel(factor(dat.1$GDPWdiff), ref = "no change")
knitr::opts_chunk$set(echo = TRUE)
library(nnet)
library(MASS)
# save the files named gdpChange.csv and MexicoMuniData.csv into the same folder as this R markdown file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat.1 <- read.csv("gdpChange.csv", stringsAsFactors = F)
dat.2 <- read.csv("MexicoMuniData.csv")
# Set reference category
dat.1$GDPWdiff <- relevel(factor(dat.1$GDPWdiff), ref = "no change")
View(dat.1)
# Display summary of the model
summary(model)
# Convert GDPWdiff to a factor and set "no change" as the reference
dat.1$GDPWdiff <- factor(dat.1$GDPWdiff)
dat.1$GDPWdiff <- relevel(dat.1$GDPWdiff, ref = "no change")
# Fit the multinomial logit model
model <- multinom(GDPWdiff ~ OIL, data = dat.1)
# Display summary of the model
summary(model)
dat.1$GDPWdiff <- relevel(dat.1$GDPWdiff, ref = "no change")
# Convert GDPWdiff to a factor and set "no change" as the reference
dat.1$GDPWdiff <- factor(dat.1$GDPWdiff)
dat.1$GDPWdiff <- relevel(dat.1$GDPWdiff, ref = "no change")
knitr::opts_chunk$set(echo = TRUE)
library(nnet)
library(MASS)
# save the files named gdpChange.csv and MexicoMuniData.csv into the same folder as this R markdown file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat.1 <- read.csv("gdpChange.csv", stringsAsFactors = F)
dat.2 <- read.csv("MexicoMuniData.csv")
# Convert GDPWdiff to a factor and set "no change" as the reference
dat.1$GDPWdiff <- factor(dat.1$GDPWdiff)
dat.1$GDPWdiff <- relevel(dat.1$GDPWdiff, ref = "no change")
unique(dat.1$GDPWdiff)
# Fit the multinomial logit model
model <- multinom(GDPWdiff ~ OIL, data = dat.1)
# Fit the multinomial logit model
model <- glm(GDPWdiff ~ OIL, data = dat.1)
# Display summary of the model
summary(model)
# Fit the multinomial logit model
model <- lm(GDPWdiff ~ OIL, data = dat.1)
# Fit the multinomial logit model
model <- glm(GDPWdiff ~ OIL, data = dat.1, family = 'binomial)
# Display summary of the model
# Fit the multinomial logit model
model <- glm(GDPWdiff ~ OIL, data = dat.1, family = 'binomial')
# Fit the multinomial logit model
model <- glm(GDPWdiff ~ OIL, data = dat.1, family = 'binomial')
# Display summary of the model
summary(model)
multinom
# Fit the multinomial logit model
model <- multinom(GDPWdiff ~ OIL, data = dat.1)
dat.1$GDPWdiff
dat.1$OIL
dat.1$OIL <- ifelse(dat.1$OIL == 0, "no change", dat.1$OIL)
dat.1$OIL
dat.1$OIL <- ifelse(dat.1$OIL == 0, "no change", 'change')
dat.1
dat.1$OIL
knitr::opts_chunk$set(echo = TRUE)
library(nnet)
library(MASS)
# save the files named gdpChange.csv and MexicoMuniData.csv into the same folder as this R markdown file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat.1 <- read.csv("gdpChange.csv", stringsAsFactors = F)
dat.2 <- read.csv("MexicoMuniData.csv")
dat.1$OIL <- ifelse(dat.1$OIL == 0, "no change", 'change')
# Fit the multinomial logit model
model <- multinom(GDPWdiff ~ OIL, data = dat.1)
dat.1
dat.1$OIL
# Fit the multinomial logit model
model <- multinom(GDPWdiff ~ OIL, data = dat.1)
table(dat.1$GDPWdiff)
knitr::opts_chunk$set(echo = TRUE)
library(nnet)
library(MASS)
# save the files named gdpChange.csv and MexicoMuniData.csv into the same folder as this R markdown file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat.1 <- read.csv("gdpChange.csv", stringsAsFactors = F)
dat.2 <- read.csv("MexicoMuniData.csv")
dat.1$OIL <- as.factor(dat.1$OIL)
# Fit the multinomial logit model
model <- multinom(GDPWdiff ~ OIL, data = dat.1)
dat.1$GDPWdiff <- factor(dat.1$GDPWdiff, levels = c("no change", "negative", "positive"))
# Fit the multinomial logit model
multinom_model <- multinom(GDPWdiff ~ REG + OIL, data = dat.1)
View(dat.1)
knitr::opts_chunk$set(echo = TRUE)
library(nnet)
library(MASS)
# save the files named gdpChange.csv and MexicoMuniData.csv into the same folder as this R markdown file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat.1 <- read.csv("gdpChange.csv", stringsAsFactors = F)
dat.2 <- read.csv("MexicoMuniData.csv")
# Convert GDPWdiff to a factor with "no change" as the reference level
dat.1$GDPWdiff <- factor(dat.1$GDPWdiff, levels = c("no change", "negative", "positive"))
# Fit the multinomial logit model
multinom_model <- multinom(GDPWdiff ~ REG + OIL, data = dat.1)
dat.1$GDPWdiff
knitr::opts_chunk$set(echo = TRUE)
library(nnet)
library(MASS)
# save the files named gdpChange.csv and MexicoMuniData.csv into the same folder as this R markdown file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat.1 <- read.csv("gdpChange.csv", stringsAsFactors = F)
dat.2 <- read.csv("MexicoMuniData.csv")
# Create the categorical GDPWdiff variable
dat.1$GDPWdiff_cat <- ifelse(dat.1$GDPWdiff < 0, "negative",
ifelse(dat.1$GDPWdiff == 0, "no change", "positive"))
# Convert to factor with "no change" as the reference level
dat.1$GDPWdiff_cat <- factor(dat.1$GDPWdiff_cat, levels = c("no change", "negative", "positive"))
# Fit the multinomial logit model
multinom_model <- multinom(GDPWdiff_cat ~ REG + OIL, data = dat.1)
# Print the model summary
summary(multinom_model)
library(stargazer)
stargazer((multinom_model), type = 'text')
# make GDPWdiff a categorical variable
dat.1$GDPWdiff <- ifelse(dat.1$GDPWdiff < 0, "negative",
ifelse(dat.1$GDPWdiff == 0, "no change", "positive"))
# make "no change" as the reference level
dat.1$GDPWdiff_cat <- factor(dat.1$GDPWdiff, levels = c("no change", "negative", "positive"))
# Fit the multinomial logit model
multinom_model <- multinom(GDPWdiff_cat ~ REG + OIL,
data = dat.1)
# Print the model summary
summary(multinom_model)
stargazer((multinom_model), type = 'text')
# make GDPWdiff a categorical variable
dat.1$GDPWdiff <- ifelse(dat.1$GDPWdiff < 0, "negative",
ifelse(dat.1$GDPWdiff == 0, "no change", "positive"))
# make "no change" as the reference level
dat.1$GDPWdiff_cat <- factor(dat.1$GDPWdiff, levels = c("no change", "negative", "positive"))
# Fit the multinomial logit model
multinom_model <- multinom(GDPWdiff_cat ~ REG + OIL,
data = dat.1)
# Print the model summary
summary(multinom_model)
stargazer((multinom_model), type = 'text')
multinom_model
# Print the model summary
summary(multinom_model)
knitr::opts_chunk$set(echo = TRUE)
library(nnet)
library(MASS)
library(stargazer)
# save the files named gdpChange.csv and MexicoMuniData.csv into the same folder as this R markdown file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat.1 <- read.csv("gdpChange.csv", stringsAsFactors = F)
dat.2 <- read.csv("MexicoMuniData.csv")
# make GDPWdiff a categorical variable
dat.1$GDPWdiff <- ifelse(dat.1$GDPWdiff < 0, "negative",
ifelse(dat.1$GDPWdiff == 0, "no change", "positive"))
# make "no change" as the reference level
dat.1$GDPWdiff <- factor(dat.1$GDPWdiff, levels = c("no change", "negative", "positive"))
# unordered multinomial logit model
multinom_model <- multinom(GDPWdiff ~ REG + OIL,
data = dat.1)
# Print the model summary
summary(multinom_model)
stargazer((multinom_model), type = 'text')
# make GDPWdiff a categorical variable
dat.1$GDPWdiff <- ifelse(dat.1$GDPWdiff < 0, "negative",
ifelse(dat.1$GDPWdiff == 0, "no change", "positive"))
# make "no change" as the reference level
dat.1$GDPWdiff <- factor(dat.1$GDPWdiff, levels = c("no change", "negative", "positive"))
# unordered multinomial logit model
multinom_model <- multinom(GDPWdiff ~ REG + OIL,
data = dat.1)
knitr::opts_chunk$set(echo = TRUE)
library(nnet)
library(MASS)
library(stargazer)
# save the files named gdpChange.csv and MexicoMuniData.csv into the same folder as this R markdown file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat.1 <- read.csv("gdpChange.csv", stringsAsFactors = F)
dat.2 <- read.csv("MexicoMuniData.csv")
# make GDPWdiff a categorical variable
dat.1$GDPWdiff_categ <- ifelse(dat.1$GDPWdiff < 0, "negative",
ifelse(dat.1$GDPWdiff == 0, "no change", "positive"))
# make "no change" as the reference level
dat.1$GDPWdiff_categ <- factor(dat.1$GDPWdiff_categ, levels = c("no change", "negative", "positive"))
# unordered multinomial logit model
multinom_model <- multinom(GDPWdiff_categ ~ REG + OIL,
data = dat.1)
# Print the model summary
summary(multinom_model)
# stargazer((multinom_model), type = 'text')
# make GDPWdiff a categorical variable
dat.1$GDPWdiff_categ <- ifelse(dat.1$GDPWdiff < 0, "negative",
ifelse(dat.1$GDPWdiff == 0, "no change", "positive"))
# make "no change" as the reference level
dat.1$GDPWdiff_categ <- factor(dat.1$GDPWdiff_categ, levels = c("no change", "negative", "positive"))
# unordered multinomial logit model
multinom_model <- multinom(GDPWdiff_categ ~ REG + OIL,
data = dat.1)
# Print the model summary
summary(multinom_model)
# stargazer((multinom_model), type = 'text')
# unordered multinomial logit model
multinom_model <- multinom(GDPWdiff_categ ~ OIL,
data = dat.1)
# Print the model summary
summary(multinom_model)
# unordered multinomial logit model
multinom_model <- multinom(GDPWdiff_categ ~ .,
data = dat.1)
# make GDPWdiff a categorical variable
dat.1$GDPWdiff_categ <- ifelse(dat.1$GDPWdiff < 0, "negative",
ifelse(dat.1$GDPWdiff == 0, "no change", "positive"))
# make "no change" as the reference level
dat.1$GDPWdiff_categ <- factor(dat.1$GDPWdiff_categ, levels = c("no change", "negative", "positive"))
# unordered multinomial logit model
multinom_model <- multinom(GDPWdiff_categ ~ .,
data = dat.1)
# make GDPWdiff a categorical variable
dat.1$GDPWdiff_categ <- ifelse(dat.1$GDPWdiff < 0, "negative",
ifelse(dat.1$GDPWdiff == 0, "no change", "positive"))
# make "no change" as the reference level
dat.1$GDPWdiff_categ <- factor(dat.1$GDPWdiff_categ, levels = c("no change", "negative", "positive"))
# unordered multinomial logit model
multinom_model <- multinom(GDPWdiff_categ ~ REG + OIL,
data = dat.1)
# Print the model summary
summary(multinom_model)
# stargazer((multinom_model), type = 'text')
knitr::opts_chunk$set(echo = TRUE)
library(nnet)
library(MASS)
library(stargazer)
# save the files named gdpChange.csv and MexicoMuniData.csv into the same folder as this R markdown file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat.1 <- read.csv("gdpChange.csv", stringsAsFactors = F)
dat.2 <- read.csv("MexicoMuniData.csv")
# make GDPWdiff a categorical variable
dat.1$GDPWdiff_categ <- ifelse(dat.1$GDPWdiff < 0, "negative",
ifelse(dat.1$GDPWdiff == 0, "no change", "positive"))
# make "no change" as the reference level
dat.1$GDPWdiff_categ <- factor(dat.1$GDPWdiff_categ, levels = c("no change", "negative", "positive"))
# unordered multinomial logit model
multinom_model <- multinom(GDPWdiff_categ ~ REG + OIL,
data = dat.1)
# Print the model summary
summary(multinom_model)
# stargazer((multinom_model), type = 'text')
polyr(GDPWdiff_categ ~ REG + OIL ,  data=data, Hess=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(nnet)
library(MASS)
library(stargazer)
# save the files named gdpChange.csv and MexicoMuniData.csv into the same folder as this R markdown file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat.1 <- read.csv("gdpChange.csv", stringsAsFactors = F)
dat.2 <- read.csv("MexicoMuniData.csv")
polyr(GDPWdiff_categ ~ REG + OIL ,  data=data, Hess=TRUE)
polr(GDPWdiff_categ ~ REG + OIL ,  data=data, Hess=TRUE)
polr(GDPWdiff_categ ~ REG + OIL ,  data=dat.1, Hess=TRUE)
# make GDPWdiff a categorical variable
dat.1$GDPWdiff_categ <- ifelse(dat.1$GDPWdiff < 0, "negative",
ifelse(dat.1$GDPWdiff == 0, "no change", "positive"))
# make "no change" as the reference level
dat.1$GDPWdiff_categ <- factor(dat.1$GDPWdiff_categ, levels = c("no change", "negative", "positive"))
# unordered multinomial logit model
multinom_model <- multinom(GDPWdiff_categ ~ REG + OIL,
data = dat.1)
# Print the model summary
summary(multinom_model)
# stargazer((multinom_model), type = 'text')
polr(GDPWdiff_categ ~ REG + OIL ,  data=dat.1, Hess=TRUE)
# your code here
o_multi_model <- polr(GDPWdiff_categ ~ REG + OIL ,  data=dat.1, Hess=TRUE)
o_multi_model
summary(o_multi_model)
stargazer((un_multi_model), type = 'text')
# make GDPWdiff a categorical variable
dat.1$GDPWdiff_categ <- ifelse(dat.1$GDPWdiff < 0, "negative",
ifelse(dat.1$GDPWdiff == 0, "no change", "positive"))
# make "no change" as the reference level
dat.1$GDPWdiff_categ <- factor(dat.1$GDPWdiff_categ, levels = c("no change", "negative", "positive"))
# unordered multinomial logit model
un_multi_model <- multinom(GDPWdiff_categ ~ REG + OIL,
data = dat.1)
# Print the model summary
summary(un_multi_model)
stargazer((un_multi_model), type = 'text')
# make GDPWdiff a categorical variable
dat.1$GDPWdiff_categ <- ifelse(dat.1$GDPWdiff < 0, "negative",
ifelse(dat.1$GDPWdiff == 0, "no change", "positive"))
# make "no change" as the reference level
dat.1$GDPWdiff_categ <- factor(dat.1$GDPWdiff_categ, levels = c("no change", "negative", "positive"))
# unordered multinomial logit model
un_multi_model <- multinom(GDPWdiff_categ ~ REG + OIL,
data = dat.1)
# Print the model summary
# summary(un_multi_model)
stargazer((un_multi_model), type = 'text')
# summary(o_multi_model)
stargazer((o_multi_model), type = 'text')
dat.2 <- dat.2[!is.na(dat.2$pan.vote.09) & dat.2$pan.vote.09 < 1, ]
dat.2$competitive.district <- ifelse(.45 < dat.2$pan.vote.09 & dat.2$pan.vote.09 <.55, 1, 0)
# Poisson regression model
poisson_model <- glm(PAN.visits.06 ~ competitive.district + marginality.06 + PAN.governor.06,
data = dat.2, family = "poisson")
summary(poisson_model)
competitive_district_row <- coefficients["competitive.district", ]
p_value <- competitive_district_row["Pr(>|z|)"]
competitive_district_row <- coefficients["competitive.district"]
competitive_district_row <- coefficients["competitive.district",]
poisson_model$coefficients
rm(list = ls())
library(stargazer)
setwd("~/Trintiy College/Dissertation")
data <- read.csv('data/merseyside2022.csv',
header=T,
stringsAsFactors = TRUE)
data <- read.csv('data/london2022.csv',
header=T,
stringsAsFactors = TRUE)
model <- lm(stopsLSOA ~ selfEthnic,
data = data)
stargazer(model,
type = 'text')
View(data)
model <- lm(stopsLSOA ~ selfEthnic + IMDRank,
data = data)
stargazer(model,
type = 'text')
model <- lm(stopsLSOA ~  IMDRank,
data = data)
stargazer(model,
type = 'text')
data.columns
data.columns()
colnames(data)
model <- lm(stopsLSOA ~ hprice + selfEthnic + IMDRank + distStation,
data = data)
stargazer(model,
type = 'text')
model <- lm(stopsLSOA ~ hprice + IMDRank + distStation,
data = data)
stargazer(model,
type = 'text')
model <- lm(stops1000 ~ hprice + IMDRank + distStation,
data = data)
stargazer(model,
type = 'text')
model <- lm(stopsLSOA ~ borough,
data = data)
stargazer(model,
type = 'text')
plot(fitted(model), resid(model))
# Load necessary libraries
library(dplyr)
# Function to plot the average effect of borough on stopsLSOA
plot_average_effect <- function(data, stopsLSOA_col = "stopsLSOA", borough_col = "borough") {
# Check if the columns exist
if (!(stopsLSOA_col %in% names(data)) || !(borough_col %in% names(data))) {
stop(paste("Columns", stopsLSOA_col, "or", borough_col, "not found in the data."))
}
# Calculate the average stopsLSOA for each borough
average_effects <- data %>%
group_by(!!sym(borough_col)) %>% #use !!sym to evaluate the column name
summarise(average_stopsLSOA = mean(!!sym(stopsLSOA_col), na.rm = TRUE)) #use !!sym to evaluate the column name
# Create a bar plot of the average effects
barplot(average_effects$average_stopsLSOA,
names.arg = average_effects[[borough_col]],
main = paste("Average", stopsLSOA_col, "by", borough_col),
xlab = borough_col,
ylab = paste("Average", stopsLSOA_col),
las = 2, # Rotate x-axis labels
cex.names = 0.8) # Adjust x-axis label size
}
# Example usage with dummy data
dummy_data <- data.frame(
borough = rep(c("A", "B", "C"), each = 4),
stopsLSOA = c(10, 12, 11, 9, 15, 16, 14, 17, 20, 22, 19, 21)
)
plot_average_effect(dummy_data)
model$coefficients
# Assuming 'model' is your fitted linear model (lm object)
# Extract the coefficients
coefficients <- model$coefficients
# Create a data frame for plotting
coef_df <- data.frame(
borough = names(coefficients),
coefficient = coefficients
)
# Remove the intercept from the borough names
coef_df$borough <- gsub("borough", "", coef_df$borough)
# Plot the coefficients using a bar plot
barplot(coef_df$coefficient,
names.arg = coef_df$borough,
main = "Coefficients of Borough Effects",
xlab = "Borough",
ylab = "Coefficient Value",
las = 2, # Rotate x-axis labels
cex.names = 0.8) # Adjust x-axis label size
# Add a horizontal line at y=0
abline(h=0, col="red", lty=2)
# Plot the coefficients using a bar plot
barplot(coef_df$coefficient,
names.arg = coef_df$borough,
main = "Coefficients of Borough Effects",
xlab = "Borough",
ylab = "Coefficient Value",
# las = 2, # Rotate x-axis labels
horiz = TRUE, # Horizontal bar plot
cex.names = 0.8) # Adjust x-axis label size
# Add a horizontal line at y=0
abline(h=0, col="red", lty=2)
# Add a horizontal line at y=0
abline(v=0, col="red", lty=2)
# Plot the coefficients using a bar plot
barplot(coef_df$coefficient,
names.arg = coef_df$borough,
main = "Coefficients of Borough Effects",
xlab = "Borough",
ylab = "Coefficient Value",
# las = 2, # Rotate x-axis labels
horiz = TRUE, # Horizontal bar plot
cex.names = 0.8) # Adjust x-axis label size
# Add a horizontal line at y=0
abline(v=0, col="red", lty=2)
# Plot the coefficients using a bar plot
barplot(coef_df$coefficient,
names.arg = coef_df$borough,
main = "Coefficients of Borough Effects",
xlab = "Borough",
ylab = "Coefficient Value",
las = 2, # Rotate x-axis labels
horiz = TRUE, # Horizontal bar plot
cex.names = 0.8) # Adjust x-axis label size
# Add a horizontal line at y=0
abline(v=0, col="red", lty=2)
# Plot the coefficients using a bar plot
barplot(coef_df$coefficient,
names.arg = coef_df$borough,
main = "Coefficients of Borough Effects",
xlab = "Borough",
ylab = "Coefficient Value",
las = 2, # Rotate x-axis labels
horiz = TRUE)#, # Horizontal bar plot
# Add a horizontal line at y=0
abline(v=0, col="red", lty=2)
# Plot the coefficients using a bar plot
barplot(coef_df$coefficient,
names.arg = coef_df$borough,
main = "Coefficients of Borough Effects",
xlab = "Borough",
ylab = "Coefficient Value",
las = 2, # Rotate x-axis labels
horiz = TRUE, # Horizontal bar plot
cex.names = 0.8) # Adjust x-axis label size
abline(h=0, col="red", lty=2)
data$borough
data$borough.unique
data$borough.unique()
coef_df
model <- lm(stopsLSOA ~ borough,
data = data)
stargazer(model,
type = 'text')
model <- lm(stopsLSOA ~ borough*hprice,
data = data)
stargazer(model,
type = 'text')
model <- lm(stopsLSOA ~ age,
data = data)
stargazer(model,
type = 'text')
model <- glm(stopsLSOA ~ age,
data = data)
stargazer(model,
type = 'text')
model <- glm(stopsLSOAtotal ~ age,
data = data,
family = poisson)
stargazer(model,
type = 'text')
model <- glm(stopsLSOAtotal ~ age + IDMRank,
data = data,
family = poisson)
model <- glm(stopsLSOAtotal ~ age + IMDRank,
data = data,
family = poisson)
stargazer(model,
type = 'text')
model <- glm(stopsLSOAtotal ~ age + IMDRank + nonWhite,
data = data,
family = poisson)
stargazer(model,
type = 'text')
model <- glm(stopsLSOAtotal ~ IMDRank + nonWhite,
data = data,
family = poisson)
stargazer(model,
type = 'text')
model <- glm(stopsLSOAtotal ~ obj,
data = data,
family = poisson)
stargazer(model,
type = 'text')
model <- glm(stopsLSOAtotal ~ obj*borough,
data = data,
family = poisson)
stargazer(model,
type = 'text')
